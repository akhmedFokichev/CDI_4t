const int hallSensor = 2;  // –î–∞—Ç—á–∏–∫ –•–æ–ª–ª–∞
const int ignitionPin = 9;  // –ö–∞—Ç—É—à–∫–∞ –∑–∞–∂–∏–≥–∞–Ω–∏—è

volatile unsigned long lastPulseTime = 0;
volatile unsigned long rpm = 0;
volatile unsigned long delayIgnition = 0;

// üîπ –£–∫–∞–∑—ã–≤–∞–µ–º —É–≥–æ–ª —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –¥–∞—Ç—á–∏–∫–∞ (–º–æ–∂–Ω–æ –º–µ–Ω—è—Ç—å!)
const int startAngle = 40;  // –ù–∞–ø—Ä–∏–º–µ—Ä, –¥–∞—Ç—á–∏–∫ —Å—Ç–æ–∏—Ç –Ω–∞ 40¬∞ –¥–æ –í–ú–¢

void setup() {
  pinMode(hallSensor, INPUT_PULLUP);
  pinMode(ignitionPin, OUTPUT);
  Serial.begin(9600);

  attachInterrupt(digitalPinToInterrupt(hallSensor), fireIgnition, FALLING);
}

void loop() {
  static unsigned long lastPrintTime = 0;

  if (millis() - lastPrintTime >= 1000) {
    lastPrintTime = millis();
    Serial.print("RPM: ");
    Serial.print(rpm);
    Serial.print(" | –£–û–ó: ");
    Serial.print(getAdvanceAngle(rpm));
    Serial.print(" | –ó–∞–¥–µ—Ä–∂–∫–∞: ");
    Serial.println(delayIgnition);
  }
}

// üîπ –§—É–Ω–∫—Ü–∏—è –ø—Ä–µ—Ä—ã–≤–∞–Ω–∏—è (–ø—Ä–∏—Ö–æ–¥–∏—Ç —Å–∏–≥–Ω–∞–ª –æ—Ç –¥–∞—Ç—á–∏–∫–∞ –•–æ–ª–ª–∞)
void fireIgnition() {
  unsigned long currentTime = micros();
  unsigned long pulseInterval = currentTime - lastPulseTime;

  if (pulseInterval > 0) {
    rpm = 60000000 / pulseInterval;  // –í—ã—á–∏—Å–ª—è–µ–º RPM
  }

  lastPulseTime = currentTime;

  // –ü–æ–ª—É—á–∞–µ–º —É–≥–æ–ª –æ–ø–µ—Ä–µ–∂–µ–Ω–∏—è –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç RPM
  int ignitionAdvance = getAdvanceAngle(rpm);

  // üîπ –†–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ–º –∑–∞–¥–µ—Ä–∂–∫—É –ø–µ—Ä–µ–¥ –∏—Å–∫—Ä–æ–π —Å —É—á—ë—Ç–æ–º —É–≥–ª–∞ –¥–∞—Ç—á–∏–∫–∞
  int effectiveAdvance = startAngle - ignitionAdvance;  
  if (effectiveAdvance < 0) effectiveAdvance = 0; // –ò—Å–∫—Ä–∞ –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –ø–æ–∑–∂–µ –í–ú–¢

  delayIgnition = (effectiveAdvance * 1000000) / (rpm * 6); // –ü–µ—Ä–µ–≤–æ–¥ –≥—Ä–∞–¥—É—Å–æ–≤ –≤ –º–∏–∫—Ä–æ—Å–µ–∫—É–Ω–¥—ã

  delayMicroseconds(delayIgnition); // –ñ–¥—ë–º –Ω—É–∂–Ω–æ–µ –≤—Ä–µ–º—è –ø–µ—Ä–µ–¥ –∏—Å–∫—Ä–æ–π

  // –ü–æ–¥–∞—ë–º –∏—Å–∫—Ä—É
  digitalWrite(ignitionPin, HIGH);
  delayMicroseconds(5000); // –í—Ä–µ–º—è –∑–∞—Ä—è–¥–∫–∏ –∫–∞—Ç—É—à–∫–∏
  digitalWrite(ignitionPin, LOW);
}

// üîπ –§—É–Ω–∫—Ü–∏—è –≤—ã—á–∏—Å–ª–µ–Ω–∏—è —É–≥–ª–∞ –æ–ø–µ—Ä–µ–∂–µ–Ω–∏—è –∑–∞–∂–∏–≥–∞–Ω–∏—è (–ø–æ–¥–±–∏—Ä–∞–µ–º –ø–æ–¥ –º–æ—Ç–æ—Ä)
int getAdvanceAngle(unsigned long rpm) {
  if (rpm < 1000) return 10;
  if (rpm < 2000) return 15;
  if (rpm < 3000) return 20;
  if (rpm < 4000) return 25;
  return 30; // –ú–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π —É–≥–æ–ª
}
